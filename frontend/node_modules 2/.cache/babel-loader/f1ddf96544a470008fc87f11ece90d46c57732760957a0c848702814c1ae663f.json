{"ast":null,"code":"import _regeneratorRuntime from\"/Users/harimasoor/Desktop/current/localVoices/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/harimasoor/Desktop/current/localVoices/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";function csrfFetch(_x){return _csrfFetch.apply(this,arguments);}function _csrfFetch(){_csrfFetch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url){var options,res,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:options=_args.length>1&&_args[1]!==undefined?_args[1]:{};// set options.method to 'GET' if there is no method\noptions.method=options.method||\"GET\";// set options.headers to an empty object if there is no headers\noptions.headers=options.headers||{};// if the options.method is not 'GET', then set the \"Content-Type\" header to\n// \"application/json\" and set the \"X-CSRF-Token\" header to the value of\n// \"X-CSRF-TOKEN\" in `sessionStorage`\nif(options.method.toUpperCase()!==\"GET\"){options.headers[\"Content-Type\"]=options.headers[\"Content-Type\"]||\"application/json\";options.headers[\"X-CSRF-Token\"]=sessionStorage.getItem(\"X-CSRF-Token\");}// call fetch with the url and the updated options hash\n_context.next=6;return fetch(url,options);case 6:res=_context.sent;if(!(res.status>=400)){_context.next=9;break;}throw res;case 9:return _context.abrupt(\"return\",res);case 10:case\"end\":return _context.stop();}},_callee);}));return _csrfFetch.apply(this,arguments);}export default csrfFetch;","map":{"version":3,"names":["csrfFetch","_x","_csrfFetch","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","res","_args","wrap","_callee$","_context","prev","next","length","undefined","method","headers","toUpperCase","sessionStorage","getItem","fetch","sent","status","abrupt","stop"],"sources":["/Users/harimasoor/Desktop/current/localVoices/frontend/src/store/csrf.js"],"sourcesContent":["async function csrfFetch(url, options = {}) {\n    // set options.method to 'GET' if there is no method\n    options.method = options.method || \"GET\";\n    // set options.headers to an empty object if there is no headers\n    options.headers = options.headers || {};\n  \n    // if the options.method is not 'GET', then set the \"Content-Type\" header to\n    // \"application/json\" and set the \"X-CSRF-Token\" header to the value of\n    // \"X-CSRF-TOKEN\" in `sessionStorage`\n    if (options.method.toUpperCase() !== \"GET\") {\n      options.headers[\"Content-Type\"] =\n        options.headers[\"Content-Type\"] || \"application/json\";\n      options.headers[\"X-CSRF-Token\"] = sessionStorage.getItem(\"X-CSRF-Token\");\n    }\n  \n    // call fetch with the url and the updated options hash\n    const res = await fetch(url, options);\n  \n    // if the response status code is 400 or above, then throw an error with the\n    // error being the response\n    if (res.status >= 400) throw res;\n  \n    // if the response status code is under 400, then return the response to the\n    // next promise chain\n    return res;\n  }\n  \n  export default csrfFetch;"],"mappings":"gTAAe,CAAAA,SAASA,CAAAC,EAAA,SAAAC,UAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,WAAA,EAAAA,UAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAxB,SAAAC,QAAyBC,GAAG,MAAAC,OAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAR,SAAA,QAAAE,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAEP,OAAO,CAAAE,KAAA,CAAAM,MAAA,IAAAN,KAAA,MAAAO,SAAA,CAAAP,KAAA,IAAG,CAAC,CAAC,CACtC;AACAF,OAAO,CAACU,MAAM,CAAGV,OAAO,CAACU,MAAM,EAAI,KAAK,CACxC;AACAV,OAAO,CAACW,OAAO,CAAGX,OAAO,CAACW,OAAO,EAAI,CAAC,CAAC,CAEvC;AACA;AACA;AACA,GAAIX,OAAO,CAACU,MAAM,CAACE,WAAW,CAAC,CAAC,GAAK,KAAK,CAAE,CAC1CZ,OAAO,CAACW,OAAO,CAAC,cAAc,CAAC,CAC7BX,OAAO,CAACW,OAAO,CAAC,cAAc,CAAC,EAAI,kBAAkB,CACvDX,OAAO,CAACW,OAAO,CAAC,cAAc,CAAC,CAAGE,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAC1E,CAEA;AAAAT,QAAA,CAAAE,IAAA,SACkB,CAAAQ,KAAK,CAAChB,GAAG,CAAEC,OAAO,CAAC,QAA/BC,GAAG,CAAAI,QAAA,CAAAW,IAAA,MAILf,GAAG,CAACgB,MAAM,EAAI,GAAG,GAAAZ,QAAA,CAAAE,IAAA,eAAQ,CAAAN,GAAG,eAAAI,QAAA,CAAAa,MAAA,UAIzBjB,GAAG,2BAAAI,QAAA,CAAAc,IAAA,MAAArB,OAAA,GACX,UAAAN,UAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,cAAe,CAAAJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}