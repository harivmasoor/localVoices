{"ast":null,"code":"import csrfFetch from \"./csrf.js\";\nimport history from \"../history\";\nconst SET_CURRENT_USER = 'session/setCurrentUser';\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser';\nexport const setCurrentUser = user => ({\n  type: SET_CURRENT_USER,\n  payload: user\n});\nconst removeCurrentUser = () => ({\n  type: REMOVE_CURRENT_USER\n});\nconst storeCSRFToken = response => {\n  const csrfToken = response.headers.get(\"X-CSRF-Token\");\n  if (csrfToken) sessionStorage.setItem(\"X-CSRF-Token\", csrfToken);\n};\nconst storeCurrentUser = user => {\n  if (user) sessionStorage.setItem(\"currentUser\", JSON.stringify(user));else sessionStorage.removeItem(\"currentUser\");\n};\nexport const login = ({\n  credential,\n  password\n}) => async dispatch => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  if (data.user) {\n    history.push('/news_feed'); // Redirect to news_feed after successful login\n  }\n\n  return response;\n};\nexport const restoreSession = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\");\n  storeCSRFToken(response);\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password,\n    phone_number\n  } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n      phone_number\n    })\n  });\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"DELETE\"\n  });\n  storeCurrentUser(null);\n  dispatch(removeCurrentUser());\n  return response;\n};\nconst initialState = {\n  user: JSON.parse(sessionStorage.getItem(\"currentUser\")),\n  isAuthenticated: !!JSON.parse(sessionStorage.getItem(\"currentUser\")) // This will be true if user exists and false otherwise\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true\n      };\n    case REMOVE_CURRENT_USER:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\nexport default sessionReducer;","map":{"version":3,"names":["csrfFetch","history","SET_CURRENT_USER","REMOVE_CURRENT_USER","setCurrentUser","user","type","payload","removeCurrentUser","storeCSRFToken","response","csrfToken","headers","get","sessionStorage","setItem","storeCurrentUser","JSON","stringify","removeItem","login","credential","password","dispatch","method","body","data","json","push","restoreSession","signup","username","email","phone_number","logout","initialState","parse","getItem","isAuthenticated","sessionReducer","state","action"],"sources":["/Users/harimasoor/Desktop/current/localVoices/frontend/src/store/session.js"],"sourcesContent":["import csrfFetch from \"./csrf.js\";\nimport history from \"../history\";\n\nconst SET_CURRENT_USER = 'session/setCurrentUser';\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser';\n\nexport const setCurrentUser = (user) => ({\n  type: SET_CURRENT_USER,\n  payload: user\n});\n\nconst removeCurrentUser = () => ({\n  type: REMOVE_CURRENT_USER\n});\n\nconst storeCSRFToken = response => {\n  const csrfToken = response.headers.get(\"X-CSRF-Token\");\n  if (csrfToken) sessionStorage.setItem(\"X-CSRF-Token\", csrfToken);\n}\n\nconst storeCurrentUser = user => {\n  if (user) sessionStorage.setItem(\"currentUser\", JSON.stringify(user));\n  else sessionStorage.removeItem(\"currentUser\");\n}\n\nexport const login = ({ credential, password }) => async dispatch => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({ credential, password })\n  });\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n\n  if (data.user) {\n    history.push('/news_feed'); // Redirect to news_feed after successful login\n  }\n\n  return response;\n};\n\nexport const restoreSession = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\");\n  storeCSRFToken(response);\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password, phone_number } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n      phone_number\n    })\n  });\n  const data = await response.json();\n  storeCurrentUser(data.user);\n  dispatch(setCurrentUser(data.user));\n  return response;\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"DELETE\"\n  });\n  storeCurrentUser(null);\n  dispatch(removeCurrentUser());\n  return response;\n};\n\nconst initialState = { \n  user: JSON.parse(sessionStorage.getItem(\"currentUser\")),\n  isAuthenticated: !!JSON.parse(sessionStorage.getItem(\"currentUser\")) // This will be true if user exists and false otherwise\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state, user: action.payload, isAuthenticated: true };\n    case REMOVE_CURRENT_USER:\n      return { ...state, user: null, isAuthenticated: false };\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}